"""
Задание.

Это упражнение преследует цель идентификации количества смен максимального значения в коллекции случайных чисел. Ряд должен быть заполнен числами от 1 до 100. При этом последовательность может содержать дубликаты, а некоторых чисел из диапазона от 1 до 100 в ней может не быть.
Сделайте паузу и подумайте с листочком в руках, как вы решили бы эту задачу. Многие стали бы сравнивать каждое очередное выпавшее число с текущим максимумом в последовательности и при необходимости обновлять максимум. Это вполне подходящий способ, который приведет к правильному результату при соблюдении алгоритма. А как вы думаете, сколько раз обновится максимум на протяжении генерирования всей последовательности?
На этот вопрос можно ответить при помощи теории вероятностей, но мы попробуем провести необходимые симуляции. Для начала в вашей программе должно выбираться случайное число из диапазона от 1 до 100. Сразу сохраните это значение как максимальное. Далее сгенерируйте еще 99 случайных чисел в том же диапазоне. Для каждого значения выполняйте ту же проверку и при необходимости обновляйте максимум, попутно увеличивая переменную, хранящую количество «смен лидера», на единицу. Выводите каждое сгенерированное число на новой строке, добавляя примечание в случае, если на этом шаге обновлялся максимум.
После вывода всех значений на экран вы должны также оповестить пользователя о максимальном числе в ряду и количестве его обновлений. Частичный вывод программы приведен ниже. Запустите свою программу несколько раз. Оправдались ли ваши ожидания относительно количества смен максимального значения?
"""



from random import randint

"""
Атрибуты модуля  
    Методы:
        random_numbers(one, two) - Генирирует список случайных чисел от 1 до 100.
        main() - Обеспечивает интерфейс при выводе случайных чисел и счёте количества обновлений максимума.  
  
    Константы:  
        HELLO: str - текстовая строка с назначением программы. 
"""


HELLO = "Программа выводит ряд чисел и считает количество обновлений максимума"


def random_numbers(start: int, end: int) -> list:
    """
    Генирирует список случайных чисел от 1 до 100.

    Параметры метода:
        start: int - начальное число диапазона случайных чисел.
        end: int - конечное число диапазона случайных чисел.
    
    Возврат:
        random_list: list of int - список случайных целых чисел от 1 до 100.
    """

    random_list = []
    for i in range(end):
        random_list.append(randint(start, end-1))

    return random_list



def main():
    """
    Обеспечивает интерфейс при выводе случайных чисел и счёте количества обновлений максимума.

    Параметры метода:
        start: int - начальное число диапазона случайных чисел.
        end: int - конечное число диапазона случайных чисел.
        num_shifts: int - количество смен максимального значения.
        random_list: list of int - список случайных целых чисел от 1 до 100.
        max_num: int - максимальное значение в ряду.
    """

    print(HELLO)

    start = 1
    end = 101
    num_shifts = 0
    random_list = []    
    random_list = random_numbers(start, end)
    max_num = random_list[0]

    for i in range(end):
        if max_num < random_list[i]:
            print(random_list[i], "<== Обновление")
            num_shifts += 1
            max_num = random_list[i]
            
        else:
            print(random_list[i])

    print("Максимальное значение в ряду:", max_num)
    print("Количество смен максимального значения:", num_shifts)


main()
