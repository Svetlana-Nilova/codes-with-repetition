"""
Задание. 

Определение бита четности - это простой механизм выявления ошибок при передаче данных в условиях низкой надежности соединения, например по телефонной линии. Идея заключается в том, что после передачи каждых восьми бит следом отправляется бит четности, позволяющий определить наличие ошибки при передаче одного бита из восьми.
При этом можно использовать как контроль четности, так и контроль нечетности. В первом случае бит четности, посылаемый следом за группой из восьми бит данных, выбирается таким образом, чтобы общее количество переданных единичек в числе восьми бит данных и проверочного бита было четным. Во втором случае их количество должно быть нечетным.
Напишите программу, вычисляющую значение бита четности для групп из восьми бит, введенных пользователем, с использованием контроля четности. Пользователь может вводить комбинации из восьми бит бесконечное количество раз, а индикатором окончания ввода пусть снова будет пустая строка. После каждой введенной группы из восьми бит программа должна выводить на экран сообщение о том, чему должен равняться бит четности: 0 или 1. Также осуществляйте контроль ввода и выводите соответствующее сообщение об ошибке, если пользователь ввел последовательность, отличную от восьми бит.
"""



"""
Атрибуты модуля
    Методы:
        calculate_parity_bits(user_input) -
        main() - Обеспечивает интерфейс при вычислении значения бита четности для групп из восьми бит

    Константы:
        HELLO: str - текстовая строка с назначением программы.
"""

HELLO = "Программа вычисляет значение бита четности для групп из восьми бит, введенных пользователем"


def calculate_parity_bits(user_input: str) -> int:
    """
    Вычисляет бит четности
    
    Параметры метода:
        user_input: str - текстовая строка с восьмибитной информацией пользователя.
    
    Переменные метода:
        count_of_ones: int - количество единиц в веденом пользователе 8-битной строке
        
    Возврат:
        parity_bit: int - бит четности
    """
    
    count_of_ones = user_input.count('1')
    
    if count_of_ones % 2 != 0:
        parity_bit = 1
    else:
        parity_bit = 0
        
    return parity_bit


def main():
    """
    Обеспечивает интерфейс при вычислении бита четности.
    
    Переменные метода:
        flag: bool - переменная для работы и остановки цикла 
        user_input: str - текстовая строка с восьмибитной информацией пользователя.
        parity_bit: int - бит четности.
    """
    
    print(HELLO)

    flag = True
    
    while flag == True:
        user_input = input("Введите 8 бит(пустая строка для завершения ввода): ")
        
        if user_input == "":
            flag = False
        else:
            if len(user_input) != 8:
                print("Ошибка: Введите ровно 8 бит (0 или 1).")
            else:
                parity_bit = calculate_parity_bits(user_input)
            
                print(f"Бит четности для введенной последовательности '{user_input}' равен: {parity_bit}")


main()

